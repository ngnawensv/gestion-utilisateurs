# Charge les proprietes de la production
nextpage.message=Salut vous etes en production
error.no.user.id=Aucun utilisateur avec l'identifiant:
error.no.ressource=Not found
technical.error=Erreur technique !!!

-Dmaven.test.skip=true

################# BASE DE DONNEES ############################
#spring.datasource.url = jdbc:mysql://localhost:3306/dbgestionstockmvc?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC 
#spring.datasource.username = root
#spring.datasource.password = 

logging.level.org.hibernate.SQL=error
# Supprime et re-cr\u00e9e les tables et sequences existantes , charge le script d'initialisation de la base de donn\u00e9es data.sql
spring.jpa.hibernate.ddl-auto=create-drop

# Show or not log for each sql query
#spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = create

# Naming strategy
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#spring.data.rest.base.path=/produits/v1

################# GESTION DES LOGS ############################
logging.level.org.springframework.web=DEBUG
logging.level.com.bnguimgo.springboot.rest.server=DEBUG
#
# Pattern impression des logs console
logging.pattern.console= %d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Pattern impression des logs dans un fichier
logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} -%msg%n
# Redirection des logs vers un fichier du repertoire Temp, exemple sur windows: C:\Users\UnserName\AppData\Local\Temp\
logging.file.name=${java.io.tmpdir}/logs/restServer/applicationRestServer.log
